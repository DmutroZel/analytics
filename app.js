// const express = require('express');
// const ip = require('ip');
// const app = express();
// require('dotenv').config();
// const telegramBot = require('node-telegram-bot-api');
// const bot = new telegramBot(process.env.TELEGRAM_TOKEN, {polling: true});
// bot.sendMessage(process.env.TELEGRAM_CHAT_ID, `–ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á!`);
// const PORT = process.env.PORT || 3000;
// const path = require('path');

// app.use(express.static(path.join(__dirname, 'public')));
// app.get('/', (req, res) => {
//     console.log(ip.address());
//     res.sendFile(path.join(__dirname, 'public', 'index.html'));
  
// });


// app.listen(PORT, () => {
//   console.log(`Server is running on http://localhost:${PORT}`);
// });

const express = require('express');
const path = require('path');
const telegramBot = require('node-telegram-bot-api');
const axios = require('axios');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3000;

const bot = new telegramBot(process.env.TELEGRAM_TOKEN, { polling: true });
const CHAT_ID = process.env.TELEGRAM_CHAT_ID;

// –°–ø–∏—Å–æ–∫ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–∏—Ö –∫—Ä–∞—ó–Ω (–º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏)
const BLOCKED_COUNTRIES = ['RU', 'CN'];

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —î IP –ª–æ–∫–∞–ª—å–Ω–∏–º
const isLocalIp = (ip) => {
    return ip === '::1' || ip === '127.0.0.1' || ip.startsWith('192.168.') || ip.startsWith('10.');
};

const logUserInfo = async (req, res, next) => {
    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–µ—Ä—à–æ—ó IP-–∞–¥—Ä–µ—Å–∏ –∑—ñ —Å–ø–∏—Å–∫—É
    let ip = (req.headers['x-forwarded-for'] || '').split(',')[0] || req.connection.remoteAddress;
    
    // –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–µ—Ñ—ñ–∫—Å—É ::ffff: –¥–ª—è IPv4-–∞–¥—Ä–µ—Å —É IPv6-—Ñ–æ—Ä–º–∞—Ç—ñ
    if (ip.startsWith('::ffff:')) {
        ip = ip.replace('::ffff:', '');
    }

    const userAgent = req.headers['user-agent'];
    const today = new Date().toDateString();

    console.log(`IP: ${ip}`);

    // –Ø–∫—â–æ IP –ª–æ–∫–∞–ª—å–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é
    if (isLocalIp(ip)) {
        const logMessage = `üîî –õ–æ–∫–∞–ª—å–Ω–∏–π –∑–∞–ø–∏—Ç!\nIP: ${ip}\nUser-Agent: ${userAgent}\n–î–∞—Ç–∞: ${today}`;
        console.log(logMessage);
        bot.sendMessage(CHAT_ID, logMessage);
        next();
        return;
    }

    try {
        // –ó–∞–ø–∏—Ç –¥–æ ipapi.co
        const geoResponse = await axios.get(`https://ipapi.co/${ip}/json/`);
        console.log('API Response:', geoResponse.data);

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–º–∏–ª–∫—É API
        if (geoResponse.data.error) {
            console.error('API Error:', geoResponse.data.reason);
            bot.sendMessage(CHAT_ID, `‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ API –¥–ª—è IP: ${ip}\n–ü—Ä–∏—á–∏–Ω–∞: ${geoResponse.data.reason}`);
            next();
            return;
        }

        const countryCode = geoResponse.data.country_code || '–ù–µ–≤—ñ–¥–æ–º–∞ –∫—Ä–∞—ó–Ω–∞';

        // –õ–æ–≥—É–≤–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
        const logMessage = `üîî –ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á!\nIP: ${ip}\n–ö—Ä–∞—ó–Ω–∞: ${countryCode}\nUser-Agent: ${userAgent}\n–î–∞—Ç–∞: ${today}`;
        console.log(logMessage);
        bot.sendMessage(CHAT_ID, logMessage);

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫—Ä–∞—ó–Ω–∞ –≤ —Å–ø–∏—Å–∫—É –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–∏—Ö
        if (BLOCKED_COUNTRIES.includes(countryCode)) {
            res.status(403).send('–î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ –¥–ª—è –≤–∞—à–æ—ó –∫—Ä–∞—ó–Ω–∏.');
            bot.sendMessage(CHAT_ID, `üö´ –î–æ—Å—Ç—É–ø –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ –¥–ª—è IP: ${ip} (–ö—Ä–∞—ó–Ω–∞: ${countryCode})`);
            return;
        }
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó:', error.message);
        bot.sendMessage(CHAT_ID, `‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó –¥–ª—è IP: ${ip}\n–ü–æ–º–∏–ª–∫–∞: ${error.message}`);
        next();
    }

    next();
};

app.use(logUserInfo);

app.use(express.static(path.join(__dirname, 'public')));

app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:${PORT}`);
    bot.sendMessage(CHAT_ID, `‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});